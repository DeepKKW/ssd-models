name: "Mask_aizoo28_320x320_deploy"
layer {
  name: "data"
  type: "Input"
  top: "data"
  input_param { shape: { dim: 1 dim: 3 dim: 160 dim: 160 } }
}
layer {
  name: "Convolution1"
  type: "Convolution"
  bottom: "data"
  top: "Convolution1"
  convolution_param {
    num_output: 32
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "conv2d_0"
  type: "BatchNorm"
  bottom: "Convolution1"
  top: "Convolution1"
}
layer {
  name: "relu2d_0"
  type: "ReLU"
  bottom: "Convolution1"
  top: "Convolution1"
}
layer {
  name: "pool2d_0"
  type: "Pooling"
  bottom: "Convolution1"
  top: "pool2d_0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "Convolution2"
  type: "Convolution"
  bottom: "pool2d_0"
  top: "Convolution2"
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "conv2d_1"
  type: "BatchNorm"
  bottom: "Convolution2"
  top: "Convolution2"
}
layer {
  name: "relu2d_1"
  type: "ReLU"
  bottom: "Convolution2"
  top: "Convolution2"
}
layer {
  name: "pool2d_1"
  type: "Pooling"
  bottom: "Convolution2"
  top: "pool2d_1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "Convolution3"
  type: "Convolution"
  bottom: "pool2d_1"
  top: "Convolution3"
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "conv2d_2"
  type: "BatchNorm"
  bottom: "Convolution3"
  top: "Convolution3"
}
layer {
  name: "relu2d_2"
  type: "ReLU"
  bottom: "Convolution3"
  top: "Convolution3"
}
layer {
  name: "pool2d_2"
  type: "Pooling"
  bottom: "Convolution3"
  top: "pool2d_2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "Convolution4"
  type: "Convolution"
  bottom: "pool2d_2"
  top: "Convolution4"
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "conv2d_3"
  type: "BatchNorm"
  bottom: "Convolution4"
  top: "Convolution4"
}
layer {
  name: "relu2d_3"
  type: "ReLU"
  bottom: "Convolution4"
  top: "Convolution4"
}
layer {
  name: "pool2d_3"
  type: "Pooling"
  bottom: "Convolution4"
  top: "pool2d_3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "Convolution5"
  type: "Convolution"
  bottom: "pool2d_3"
  top: "Convolution5"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "conv2d_4"
  type: "BatchNorm"
  bottom: "Convolution5"
  top: "Convolution5"
}
layer {
  name: "relu2d_4"
  type: "ReLU"
  bottom: "Convolution5"
  top: "Convolution5"
}
layer {
  name: "pool2d_4"
  type: "Pooling"
  bottom: "Convolution5"
  top: "pool2d_4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "Convolution6"
  type: "Convolution"
  bottom: "pool2d_4"
  top: "Convolution6"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "conv2d_5"
  type: "BatchNorm"
  bottom: "Convolution6"
  top: "Convolution6"
}
layer {
  name: "relu2d_5"
  type: "ReLU"
  bottom: "Convolution6"
  top: "Convolution6"
}
layer {
  name: "pool2d_5"
  type: "Pooling"
  bottom: "Convolution6"
  top: "pool2d_5"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "Convolution7"
  type: "Convolution"
  bottom: "pool2d_5"
  top: "Convolution7"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "conv2d_6"
  type: "BatchNorm"
  bottom: "Convolution7"
  top: "Convolution7"
}
layer {
  name: "relu2d_6"
  type: "ReLU"
  bottom: "Convolution7"
  top: "Convolution7"
}
layer {
  name: "pool2d_6"
  type: "Pooling"
  bottom: "Convolution7"
  top: "pool2d_6"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "Convolution8"
  type: "Convolution"
  bottom: "pool2d_6"
  top: "Convolution8"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "conv2d_7"
  type: "BatchNorm"
  bottom: "Convolution8"
  top: "Convolution8"
}
layer {
  name: "relu2d_7"
  type: "ReLU"
  bottom: "Convolution8"
  top: "Convolution8"
}
layer {
  name: "conv2d_3_norm"
  type: "Normalize"
  bottom: "Convolution4"
  top: "conv2d_3_norm"
  norm_param {
    across_spatial: false
    scale_filler {
      type: "constant"
      value: 20.0
    }
    channel_shared: false
  }
}
layer {
  name: "conv2d_3_norm_mbox_loc"
  type: "Convolution"
  bottom: "conv2d_3_norm"
  top: "conv2d_3_norm_mbox_loc"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  convolution_param {
    num_output: 12
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.00999999977648
    }
  }
}
layer {
  name: "conv2d_3_norm_mbox_loc_bn"
  type: "BatchNorm"
  bottom: "conv2d_3_norm_mbox_loc"
  top: "conv2d_3_norm_mbox_loc"
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  batch_norm_param {
    moving_average_fraction: 0.999000012875
    eps: 0.0010000000475
  }
}
layer {
  name: "conv2d_3_norm_mbox_loc_scale"
  type: "Scale"
  bottom: "conv2d_3_norm_mbox_loc"
  top: "conv2d_3_norm_mbox_loc"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "conv2d_3_norm_mbox_loc_perm"
  type: "Permute"
  bottom: "conv2d_3_norm_mbox_loc"
  top: "conv2d_3_norm_mbox_loc_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv2d_3_norm_mbox_loc_flat"
  type: "Flatten"
  bottom: "conv2d_3_norm_mbox_loc_perm"
  top: "conv2d_3_norm_mbox_loc_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv2d_3_norm_mbox_conf"
  type: "Convolution"
  bottom: "conv2d_3_norm"
  top: "conv2d_3_norm_mbox_conf"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  convolution_param {
    num_output: 9
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.00999999977648
    }
  }
}
layer {
  name: "conv2d_3_norm_mbox_conf_bn"
  type: "BatchNorm"
  bottom: "conv2d_3_norm_mbox_conf"
  top: "conv2d_3_norm_mbox_conf"
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  batch_norm_param {
    moving_average_fraction: 0.999000012875
    eps: 0.0010000000475
  }
}
layer {
  name: "conv2d_3_norm_mbox_conf_scale"
  type: "Scale"
  bottom: "conv2d_3_norm_mbox_conf"
  top: "conv2d_3_norm_mbox_conf"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "conv2d_3_norm_mbox_conf_perm"
  type: "Permute"
  bottom: "conv2d_3_norm_mbox_conf"
  top: "conv2d_3_norm_mbox_conf_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv2d_3_norm_mbox_conf_flat"
  type: "Flatten"
  bottom: "conv2d_3_norm_mbox_conf_perm"
  top: "conv2d_3_norm_mbox_conf_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv2d_3_norm_mbox_priorbox"
  type: "PriorBox"
  bottom: "conv2d_3_norm"
  bottom: "data"
  top: "conv2d_3_norm_mbox_priorbox"
  prior_box_param {
    min_size: 12.0
    aspect_ratio: 2.0
    flip: true
    clip: false
    variance: 0.10000000149
    variance: 0.10000000149
    variance: 0.20000000298
    variance: 0.20000000298
    step: 8.0
    offset: 0.5
  }
}
layer {
  name: "conv2d_4_mbox_loc"
  type: "Convolution"
  bottom: "Convolution5"
  top: "conv2d_4_mbox_loc"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  convolution_param {
    num_output: 12
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.00999999977648
    }
  }
}
layer {
  name: "conv2d_4_mbox_loc_bn"
  type: "BatchNorm"
  bottom: "conv2d_4_mbox_loc"
  top: "conv2d_4_mbox_loc"
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  batch_norm_param {
    moving_average_fraction: 0.999000012875
    eps: 0.0010000000475
  }
}
layer {
  name: "conv2d_4_mbox_loc_scale"
  type: "Scale"
  bottom: "conv2d_4_mbox_loc"
  top: "conv2d_4_mbox_loc"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "conv2d_4_mbox_loc_perm"
  type: "Permute"
  bottom: "conv2d_4_mbox_loc"
  top: "conv2d_4_mbox_loc_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv2d_4_mbox_loc_flat"
  type: "Flatten"
  bottom: "conv2d_4_mbox_loc_perm"
  top: "conv2d_4_mbox_loc_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv2d_4_mbox_conf"
  type: "Convolution"
  bottom: "Convolution5"
  top: "conv2d_4_mbox_conf"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  convolution_param {
    num_output: 9
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.00999999977648
    }
  }
}
layer {
  name: "conv2d_4_mbox_conf_bn"
  type: "BatchNorm"
  bottom: "conv2d_4_mbox_conf"
  top: "conv2d_4_mbox_conf"
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  batch_norm_param {
    moving_average_fraction: 0.999000012875
    eps: 0.0010000000475
  }
}
layer {
  name: "conv2d_4_mbox_conf_scale"
  type: "Scale"
  bottom: "conv2d_4_mbox_conf"
  top: "conv2d_4_mbox_conf"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "conv2d_4_mbox_conf_perm"
  type: "Permute"
  bottom: "conv2d_4_mbox_conf"
  top: "conv2d_4_mbox_conf_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv2d_4_mbox_conf_flat"
  type: "Flatten"
  bottom: "conv2d_4_mbox_conf_perm"
  top: "conv2d_4_mbox_conf_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv2d_4_mbox_priorbox"
  type: "PriorBox"
  bottom: "Convolution5"
  bottom: "data"
  top: "conv2d_4_mbox_priorbox"
  prior_box_param {
    min_size: 24.0
    aspect_ratio: 2.0
    flip: true
    clip: false
    variance: 0.10000000149
    variance: 0.10000000149
    variance: 0.20000000298
    variance: 0.20000000298
    step: 16.0
    offset: 0.5
  }
}
layer {
  name: "conv2d_5_mbox_loc"
  type: "Convolution"
  bottom: "Convolution6"
  top: "conv2d_5_mbox_loc"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  convolution_param {
    num_output: 12
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.00999999977648
    }
  }
}
layer {
  name: "conv2d_5_mbox_loc_bn"
  type: "BatchNorm"
  bottom: "conv2d_5_mbox_loc"
  top: "conv2d_5_mbox_loc"
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  batch_norm_param {
    moving_average_fraction: 0.999000012875
    eps: 0.0010000000475
  }
}
layer {
  name: "conv2d_5_mbox_loc_scale"
  type: "Scale"
  bottom: "conv2d_5_mbox_loc"
  top: "conv2d_5_mbox_loc"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "conv2d_5_mbox_loc_perm"
  type: "Permute"
  bottom: "conv2d_5_mbox_loc"
  top: "conv2d_5_mbox_loc_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv2d_5_mbox_loc_flat"
  type: "Flatten"
  bottom: "conv2d_5_mbox_loc_perm"
  top: "conv2d_5_mbox_loc_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv2d_5_mbox_conf"
  type: "Convolution"
  bottom: "Convolution6"
  top: "conv2d_5_mbox_conf"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  convolution_param {
    num_output: 9
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.00999999977648
    }
  }
}
layer {
  name: "conv2d_5_mbox_conf_bn"
  type: "BatchNorm"
  bottom: "conv2d_5_mbox_conf"
  top: "conv2d_5_mbox_conf"
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  batch_norm_param {
    moving_average_fraction: 0.999000012875
    eps: 0.0010000000475
  }
}
layer {
  name: "conv2d_5_mbox_conf_scale"
  type: "Scale"
  bottom: "conv2d_5_mbox_conf"
  top: "conv2d_5_mbox_conf"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "conv2d_5_mbox_conf_perm"
  type: "Permute"
  bottom: "conv2d_5_mbox_conf"
  top: "conv2d_5_mbox_conf_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv2d_5_mbox_conf_flat"
  type: "Flatten"
  bottom: "conv2d_5_mbox_conf_perm"
  top: "conv2d_5_mbox_conf_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv2d_5_mbox_priorbox"
  type: "PriorBox"
  bottom: "Convolution6"
  bottom: "data"
  top: "conv2d_5_mbox_priorbox"
  prior_box_param {
    min_size: 51.5999984741
    aspect_ratio: 2.0
    flip: true
    clip: false
    variance: 0.10000000149
    variance: 0.10000000149
    variance: 0.20000000298
    variance: 0.20000000298
    step: 32.0
    offset: 0.5
  }
}
layer {
  name: "conv2d_6_mbox_loc"
  type: "Convolution"
  bottom: "Convolution7"
  top: "conv2d_6_mbox_loc"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  convolution_param {
    num_output: 12
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.00999999977648
    }
  }
}
layer {
  name: "conv2d_6_mbox_loc_bn"
  type: "BatchNorm"
  bottom: "conv2d_6_mbox_loc"
  top: "conv2d_6_mbox_loc"
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  batch_norm_param {
    moving_average_fraction: 0.999000012875
    eps: 0.0010000000475
  }
}
layer {
  name: "conv2d_6_mbox_loc_scale"
  type: "Scale"
  bottom: "conv2d_6_mbox_loc"
  top: "conv2d_6_mbox_loc"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "conv2d_6_mbox_loc_perm"
  type: "Permute"
  bottom: "conv2d_6_mbox_loc"
  top: "conv2d_6_mbox_loc_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv2d_6_mbox_loc_flat"
  type: "Flatten"
  bottom: "conv2d_6_mbox_loc_perm"
  top: "conv2d_6_mbox_loc_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv2d_6_mbox_conf"
  type: "Convolution"
  bottom: "Convolution7"
  top: "conv2d_6_mbox_conf"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  convolution_param {
    num_output: 9
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.00999999977648
    }
  }
}
layer {
  name: "conv2d_6_mbox_conf_bn"
  type: "BatchNorm"
  bottom: "conv2d_6_mbox_conf"
  top: "conv2d_6_mbox_conf"
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  batch_norm_param {
    moving_average_fraction: 0.999000012875
    eps: 0.0010000000475
  }
}
layer {
  name: "conv2d_6_mbox_conf_scale"
  type: "Scale"
  bottom: "conv2d_6_mbox_conf"
  top: "conv2d_6_mbox_conf"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "conv2d_6_mbox_conf_perm"
  type: "Permute"
  bottom: "conv2d_6_mbox_conf"
  top: "conv2d_6_mbox_conf_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv2d_6_mbox_conf_flat"
  type: "Flatten"
  bottom: "conv2d_6_mbox_conf_perm"
  top: "conv2d_6_mbox_conf_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv2d_6_mbox_priorbox"
  type: "PriorBox"
  bottom: "Convolution7"
  bottom: "data"
  top: "conv2d_6_mbox_priorbox"
  prior_box_param {
    min_size: 79.1999969482
    aspect_ratio: 2.0
    flip: true
    clip: false
    variance: 0.10000000149
    variance: 0.10000000149
    variance: 0.20000000298
    variance: 0.20000000298
    step: 64.0
    offset: 0.5
  }
}
layer {
  name: "conv2d_7_mbox_loc"
  type: "Convolution"
  bottom: "Convolution8"
  top: "conv2d_7_mbox_loc"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  convolution_param {
    num_output: 12
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.00999999977648
    }
  }
}
layer {
  name: "conv2d_7_mbox_loc_bn"
  type: "BatchNorm"
  bottom: "conv2d_7_mbox_loc"
  top: "conv2d_7_mbox_loc"
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  batch_norm_param {
    moving_average_fraction: 0.999000012875
    eps: 0.0010000000475
  }
}
layer {
  name: "conv2d_7_mbox_loc_scale"
  type: "Scale"
  bottom: "conv2d_7_mbox_loc"
  top: "conv2d_7_mbox_loc"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "conv2d_7_mbox_loc_perm"
  type: "Permute"
  bottom: "conv2d_7_mbox_loc"
  top: "conv2d_7_mbox_loc_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv2d_7_mbox_loc_flat"
  type: "Flatten"
  bottom: "conv2d_7_mbox_loc_perm"
  top: "conv2d_7_mbox_loc_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv2d_7_mbox_conf"
  type: "Convolution"
  bottom: "Convolution8"
  top: "conv2d_7_mbox_conf"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  convolution_param {
    num_output: 9
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.00999999977648
    }
  }
}
layer {
  name: "conv2d_7_mbox_conf_bn"
  type: "BatchNorm"
  bottom: "conv2d_7_mbox_conf"
  top: "conv2d_7_mbox_conf"
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  batch_norm_param {
    moving_average_fraction: 0.999000012875
    eps: 0.0010000000475
  }
}
layer {
  name: "conv2d_7_mbox_conf_scale"
  type: "Scale"
  bottom: "conv2d_7_mbox_conf"
  top: "conv2d_7_mbox_conf"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "conv2d_7_mbox_conf_perm"
  type: "Permute"
  bottom: "conv2d_7_mbox_conf"
  top: "conv2d_7_mbox_conf_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv2d_7_mbox_conf_flat"
  type: "Flatten"
  bottom: "conv2d_7_mbox_conf_perm"
  top: "conv2d_7_mbox_conf_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv2d_7_mbox_priorbox"
  type: "PriorBox"
  bottom: "Convolution8"
  bottom: "data"
  top: "conv2d_7_mbox_priorbox"
  prior_box_param {
    min_size: 106.800003052
    aspect_ratio: 2.0
    flip: true
    clip: false
    variance: 0.10000000149
    variance: 0.10000000149
    variance: 0.20000000298
    variance: 0.20000000298
    step: 128.0
    offset: 0.5
  }
}
layer {
  name: "mbox_loc"
  type: "Concat"
  bottom: "conv2d_3_norm_mbox_loc_flat"
  bottom: "conv2d_4_mbox_loc_flat"
  bottom: "conv2d_5_mbox_loc_flat"
  bottom: "conv2d_6_mbox_loc_flat"
  bottom: "conv2d_7_mbox_loc_flat"
  top: "mbox_loc"
  concat_param {
    axis: 1
  }
}
layer {
  name: "mbox_conf"
  type: "Concat"
  bottom: "conv2d_3_norm_mbox_conf_flat"
  bottom: "conv2d_4_mbox_conf_flat"
  bottom: "conv2d_5_mbox_conf_flat"
  bottom: "conv2d_6_mbox_conf_flat"
  bottom: "conv2d_7_mbox_conf_flat"
  top: "mbox_conf"
  concat_param {
    axis: 1
  }
}
layer {
  name: "mbox_priorbox"
  type: "Concat"
  bottom: "conv2d_3_norm_mbox_priorbox"
  bottom: "conv2d_4_mbox_priorbox"
  bottom: "conv2d_5_mbox_priorbox"
  bottom: "conv2d_6_mbox_priorbox"
  bottom: "conv2d_7_mbox_priorbox"
  top: "mbox_priorbox"
  concat_param {
    axis: 2
  }
}
layer {
  name: "mbox_conf_reshape"
  type: "Reshape"
  bottom: "mbox_conf"
  top: "mbox_conf_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: -1
      dim: 3
    }
  }
}
layer {
  name: "mbox_conf_softmax"
  type: "Softmax"
  bottom: "mbox_conf_reshape"
  top: "mbox_conf_softmax"
  softmax_param {
    axis: 2
  }
}
layer {
  name: "mbox_conf_flatten"
  type: "Flatten"
  bottom: "mbox_conf_softmax"
  top: "mbox_conf_flatten"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "detection_out"
  type: "DetectionOutput"
  bottom: "mbox_loc"
  bottom: "mbox_conf_flatten"
  bottom: "mbox_priorbox"
  top: "detection_out"
  include {
    phase: TEST
  }
  detection_output_param {
    num_classes: 3
    share_location: true
    background_label_id: 0
    nms_param {
      nms_threshold: 0.449999988079
      top_k: 400
    }
    code_type: CENTER_SIZE
    keep_top_k: 200
    confidence_threshold: 0.5
  }
}
